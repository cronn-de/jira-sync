buildscript {
	ext {
		springBootVersion = '1.5.20.RELEASE'
	}
	repositories {
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.8'
	}
}

plugins {
	id 'java'
	id 'jacoco'
	id 'eclipse'
	id 'idea'

	id 'com.github.kt3k.coveralls' version '2.8.2'
}

apply plugin: 'org.sonarqube'
apply plugin: 'org.springframework.boot'

group = 'de.cronn'

if (project.hasProperty('projectVersion')) {
	version = projectVersion
} else if (System.env.BUILD_NUMBER) {
	version = "1.0-SNAPSHOT-b" + System.env.BUILD_NUMBER
} else {
	version = "1.0"
}

plugins.withType(JacocoPlugin) {
	tasks["test"].finalizedBy 'jacocoTestReport'
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}

springBoot {
	executable = true
}

bootRun {
	systemProperties = System.properties
}

eclipse.classpath {
	downloadSources = true
}

idea.module {
	downloadJavadoc = true
	downloadSources = true
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	repositories {
		jcenter()
	}
}

dependencies {
	compile 'javax.annotation:javax.annotation-api:1.2'

	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.boot:spring-boot-starter-cache')
	compile('javax.cache:cache-api')
	compile('org.ehcache:ehcache')

	compile 'org.apache.httpcomponents:httpclient:4.5.8'
	compile 'org.apache.commons:commons-lang3:3.9'

	compile("org.springframework:spring-web")
	compile("com.fasterxml.jackson.core:jackson-databind")
	compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")

	compile("de.cronn:reflection-util:2.4.1")
	compile("de.cronn:ssh-proxy:1.3")

	testCompile("org.mockito:mockito-core:2.27.0")
	testCompile("org.assertj:assertj-core:3.12.2")
	testCompile("nl.jqno.equalsverifier:equalsverifier:3.1.8")
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile("org.springframework.boot:spring-boot-starter-web")
}

wrapper {
	gradleVersion = "6.3"
	distributionType = Wrapper.DistributionType.ALL
}
